# Generated by Django 5.2.4 on 2025-08-07 11:03

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('tag_manager_component', '0010_alter_tagmapper_v1_component_name_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ComplexityParameter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_of_pages', models.PositiveIntegerField(default=100, help_text='Base number of pages to consider for complexity calculation')),
                ('number_of_helix_v2_compatible', models.PositiveIntegerField(default=50, help_text='Number of Helix V2 compatible components')),
                ('number_of_helix_v2_non_compatible', models.PositiveIntegerField(default=20, help_text='Number of Helix V2 non-compatible components')),
                ('number_of_custom_components', models.PositiveIntegerField(default=10, help_text='Number of custom components')),
                ('total_simple_components', models.PositiveIntegerField(default=30, help_text='Total number of simple complexity components')),
                ('total_medium_components', models.PositiveIntegerField(default=40, help_text='Total number of medium complexity components')),
                ('total_complex_components', models.PositiveIntegerField(default=30, help_text='Total number of complex complexity components')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated the configuration', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Complexity Parameter Configuration',
                'verbose_name_plural': 'Complexity Parameter Configuration',
                'constraints': [models.CheckConstraint(condition=models.Q(('id', 1)), name='single_complexity_config')],
            },
        ),
    ]
